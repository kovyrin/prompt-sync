package integration

import (
	"bytes"
	"os"
	"path/filepath"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"

	"github.com/kovyrin/prompt-sync/internal/cmd"
)

func TestListCommand_Integration(t *testing.T) {
	t.Run("list with multiple sources and overlays", func(t *testing.T) {
		// Setup test workspace
		testDir := t.TempDir()

		// Create Promptsfile with sources and overlays
		promptsfileContent := `
version: 1
sources:
  - github.com/org/base-prompts
  - github.com/team/team-prompts#v1.0.0
overlays:
  - scope: project
    source: github.com/project/specific-prompts
  - scope: personal
    source: github.com/user/my-prompts
adapters:
  cursor:
    enabled: true
  claude:
    enabled: true
    prefix: "ps"
`
		require.NoError(t, os.WriteFile(
			filepath.Join(testDir, "Promptsfile"),
			[]byte(promptsfileContent),
			0644,
		))

		// Create lock file with all sources
		lockContent := `# Promptsfile.lock
# Generated by prompt-sync
# DO NOT EDIT MANUALLY

version: "1.0"
generated: 2024-01-01T00:00:00Z
sources:
  - url: github.com/org/base-prompts
    commit: abc123def456
    files:
      - path: .cursor/rules/_active/base-coding.md
        hash: sha256:hash1
      - path: .claude/commands/ps-base-coding.md
        hash: sha256:hash2
  - url: github.com/team/team-prompts
    ref: v1.0.0
    commit: 789012345678
    files:
      - path: .cursor/rules/_active/team-testing.md
        hash: sha256:hash3
  - url: github.com/project/specific-prompts
    commit: fedcba987654
    files:
      - path: .cursor/rules/_active/project-setup.md
        hash: sha256:hash4
  - url: github.com/user/my-prompts
    commit: 111222333444
    files:
      - path: .cursor/rules/_active/personal-workflow.md
        hash: sha256:hash5
`
		require.NoError(t, os.WriteFile(
			filepath.Join(testDir, "Promptsfile.lock"),
			[]byte(lockContent),
			0644,
		))

		// Change to test directory
		oldDir, err := os.Getwd()
		require.NoError(t, err)
		defer os.Chdir(oldDir)
		require.NoError(t, os.Chdir(testDir))

		// Execute list command
		output := &bytes.Buffer{}
		listCmd := cmd.ListCmd
		listCmd.SetOut(output)
		listCmd.SetErr(output)
		err = listCmd.RunE(listCmd, []string{})
		require.NoError(t, err)

		// Verify output
		outputStr := output.String()

		// Should show all sources
		assert.Contains(t, outputStr, "github.com/org/base-prompts")
		assert.Contains(t, outputStr, "github.com/team/team-prompts")
		assert.Contains(t, outputStr, "github.com/project/specific-prompts")
		assert.Contains(t, outputStr, "github.com/user/my-prompts")

		// Should show commits
		assert.Contains(t, outputStr, "abc123d") // truncated
		assert.Contains(t, outputStr, "7890123") // truncated
		assert.Contains(t, outputStr, "fedcba9") // truncated
		assert.Contains(t, outputStr, "1112223") // truncated

		// Should show ref for team prompts
		assert.Contains(t, outputStr, "v1.0.0")

		// All should be marked as installed
		assert.NotContains(t, outputStr, "(not installed)")
	})

	t.Run("list with --files shows all rendered paths", func(t *testing.T) {
		// Setup test workspace
		testDir := t.TempDir()

		// Create minimal Promptsfile
		promptsfileContent := `
version: 1
sources:
  - github.com/example/prompts
adapters:
  cursor:
    enabled: true
  claude:
    enabled: true
    prefix: "ex"
`
		require.NoError(t, os.WriteFile(
			filepath.Join(testDir, "Promptsfile"),
			[]byte(promptsfileContent),
			0644,
		))

		// Create lock file with multiple files
		lockContent := `# Promptsfile.lock
# Generated by prompt-sync
# DO NOT EDIT MANUALLY

version: "1.0"
generated: 2024-01-01T00:00:00Z
sources:
  - url: github.com/example/prompts
    commit: abc123
    files:
      - path: .cursor/rules/_active/coding-standards.md
        hash: sha256:hash1
      - path: .cursor/rules/_active/testing-guide.md
        hash: sha256:hash2
      - path: .cursor/rules/_active/git-workflow.md
        hash: sha256:hash3
      - path: .claude/commands/ex-coding-standards.md
        hash: sha256:hash4
      - path: .claude/commands/ex-testing-guide.md
        hash: sha256:hash5
      - path: .claude/commands/ex-git-workflow.md
        hash: sha256:hash6
`
		require.NoError(t, os.WriteFile(
			filepath.Join(testDir, "Promptsfile.lock"),
			[]byte(lockContent),
			0644,
		))

		// Change to test directory
		oldDir, err := os.Getwd()
		require.NoError(t, err)
		defer os.Chdir(oldDir)
		require.NoError(t, os.Chdir(testDir))

		// Execute list command with --files
		output := &bytes.Buffer{}
		listCmd := cmd.ListCmd
		listCmd.SetOut(output)
		listCmd.SetErr(output)
		listCmd.SetArgs([]string{"--files"})
		err = listCmd.ParseFlags([]string{"--files"})
		require.NoError(t, err)
		err = listCmd.RunE(listCmd, []string{})
		require.NoError(t, err)

		// Verify output shows all files
		outputStr := output.String()

		// Cursor files
		assert.Contains(t, outputStr, ".cursor/rules/_active/coding-standards.md")
		assert.Contains(t, outputStr, ".cursor/rules/_active/testing-guide.md")
		assert.Contains(t, outputStr, ".cursor/rules/_active/git-workflow.md")

		// Claude files with prefix
		assert.Contains(t, outputStr, ".claude/commands/ex-coding-standards.md")
		assert.Contains(t, outputStr, ".claude/commands/ex-testing-guide.md")
		assert.Contains(t, outputStr, ".claude/commands/ex-git-workflow.md")
	})

	t.Run("list with mixed installed and not installed sources", func(t *testing.T) {
		// Setup test workspace
		testDir := t.TempDir()

		// Create Promptsfile with three sources
		promptsfileContent := `
version: 1
sources:
  - github.com/installed/prompts
  - github.com/notinstalled/prompts
  - github.com/partial/prompts
adapters:
  cursor:
    enabled: true
`
		require.NoError(t, os.WriteFile(
			filepath.Join(testDir, "Promptsfile"),
			[]byte(promptsfileContent),
			0644,
		))

		// Create lock file with only two sources
		lockContent := `# Promptsfile.lock
# Generated by prompt-sync
# DO NOT EDIT MANUALLY

version: "1.0"
generated: 2024-01-01T00:00:00Z
sources:
  - url: github.com/installed/prompts
    commit: abc123
    files:
      - path: .cursor/rules/_active/installed.md
        hash: sha256:hash1
  - url: github.com/partial/prompts
    commit: def456
    files:
      - path: .cursor/rules/_active/partial.md
        hash: sha256:hash2
`
		require.NoError(t, os.WriteFile(
			filepath.Join(testDir, "Promptsfile.lock"),
			[]byte(lockContent),
			0644,
		))

		// Change to test directory
		oldDir, err := os.Getwd()
		require.NoError(t, err)
		defer os.Chdir(oldDir)
		require.NoError(t, os.Chdir(testDir))

		// Execute list command
		output := &bytes.Buffer{}
		listCmd := cmd.ListCmd
		listCmd.SetOut(output)
		listCmd.SetErr(output)
		err = listCmd.RunE(listCmd, []string{})
		require.NoError(t, err)

		// Verify output
		outputStr := output.String()

		// Installed source
		assert.Contains(t, outputStr, "github.com/installed/prompts")
		assert.Contains(t, outputStr, "abc123")
		assert.Contains(t, outputStr, "installed")

		// Not installed source
		assert.Contains(t, outputStr, "github.com/notinstalled/prompts")
		assert.Contains(t, outputStr, "(not installed)")

		// Partial source (in lock but still shows as installed)
		assert.Contains(t, outputStr, "github.com/partial/prompts")
		assert.Contains(t, outputStr, "def456")
	})
}
